{"version":3,"sources":["components/stateWiseData/Statewise.js","App.js","reportWebVitals.js","index.js"],"names":["Statewise","useState","data","setData","getCovidData","a","fetch","res","json","actualData","statewise","console","log","useEffect","className","map","currElem","index","state","confirmed","recovered","deaths","active","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAsEeA,EAnEG,WAEd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEAICC,MAAM,0CAJP,cAIXC,EAJW,gBAMQA,EAAIC,OANZ,OAMXC,EANW,OAQjBN,EAAQM,EAAWC,WAGnBC,QAAQC,IAAIH,EAAWC,WAXN,2CAAH,qDAmBlB,OAJAG,qBAAU,WACNT,MACD,IAGC,mCACE,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACI,qBAAIA,UAAU,mBAAd,UAAiC,sBAAMA,UAAU,+BAAhB,mBAAjC,uBAGJ,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,oBAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,yCACA,6CACA,6CACA,0CACA,0CACA,gDAIR,gCAEQZ,EAAKa,KAAI,SAACC,EAAUC,GAChB,OACI,+BACI,6BAAKD,EAASE,QACd,oBAAIJ,UAAU,QAAd,SAAuBE,EAASG,YAChC,oBAAIL,UAAU,QAAd,SAAuBE,EAASI,YAChC,oBAAIN,UAAU,MAAd,SAAqBE,EAASK,SAC9B,oBAAIP,UAAU,QAAd,SAAuBE,EAASM,SAChC,oBAAIR,UAAU,QAAd,SAAuBE,EAASO,oBAN3BN,mB,MCtC9BO,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7eafd813.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Statewise.css';\r\n\r\nconst Statewise = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const getCovidData = async () => {\r\n        //this function will run after render executed bcoz it is called in useEffect()\r\n\r\n        //here we fetch the api \r\n        const res = await fetch('https://api.covid19india.org/data.json');\r\n        //here we convert that api into json objects\r\n        const actualData = await res.json();\r\n        //here we set the data to the DOM\r\n        setData(actualData.statewise);\r\n\r\n\r\n        console.log(actualData.statewise);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCovidData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n          <div className=\"container mt-5\">\r\n            <div className=\"main-heading\">\r\n                <h1 className=\"mb-5 text-center\"><span className=\"font-weight-bold text-danger\">INDIA</span> COVID-19 CASES</h1>\r\n            </div>\r\n\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-hover\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th> State </th>\r\n                            <th> Confirmed </th>\r\n                            <th> Recovered </th>\r\n                            <th> Deaths </th>\r\n                            <th> Active </th>\r\n                            <th> Updated </th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {\r\n                            data.map((currElem, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{currElem.state}</td>\r\n                                        <td className=\"green\">{currElem.confirmed}</td>\r\n                                        <td className=\"green\">{currElem.recovered}</td>\r\n                                        <td className=\"red\">{currElem.deaths}</td>\r\n                                        <td className=\"green\">{currElem.active}</td>\r\n                                        <td className=\"green\">{currElem.lastupdatedtime}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Statewise;","import React from 'react';\nimport Statewise from './components/stateWiseData/Statewise';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <>\n      <Statewise/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}